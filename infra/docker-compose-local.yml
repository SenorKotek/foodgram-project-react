version: '3.3'
services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    networks:
      - djangonetwork
    restart: always

  backend:
    container_name: foodgram-app
    build: ../backend
    env_file:
      - ./.env
    networks:
      - djangonetwork
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    links:
      - db:db


  frontend:
    container_name: foodgram-front
    build:
      context: ../frontend
      dockerfile: Dockerfile
    networks:
      - djangonetwork
    volumes:
      - ../frontend/:/app/result_build/
  
  nginx:
    container_name: foodgram-nginx
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx_local.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend
    networks:
      - djangonetwork
    restart: always

volumes:
  static_value:
  media_value:
  postgres_data:

networks:
  djangonetwork:
    driver: bridge